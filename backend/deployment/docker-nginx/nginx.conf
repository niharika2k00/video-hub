events {}

http {
  # Define the hls_cache zone (must come before usage)
  proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=hls_cache:10m max_size=100m inactive=60m use_temp_path=off;
  resolver 127.0.0.11 ipv6=off valid=30s;  # Docker’s embedded built-in DNS server for containers.

  server {
    listen 80;
    server_name localhost; # _ is for all domains
    root /usr/share/nginx/html;
    index index.html;

    # CORS so that any HLS player can fetch the segments
    add_header Access-Control-Allow-Origin *;

    # Case: To redirect video requests to the corresponding cloud storage
    # location ~ ^/s01/video/(.+)$ {
    #   return 302 https://demobucket-890291224.s3.us-east-1.amazonaws.com/videos/$1;
    # }

    # Case: To add reverse proxy in video requests to forward to cloud storage
    # AWS S3
    # /s01/videos/1/26/master.m3u8  →  https://demobucket.../videos/1/26/master.m3u8
    location ~ ^/s01/video/(.+)$ {
      proxy_pass https://demobucket-890291224.s3.us-east-1.amazonaws.com/videos/$1;
      # proxy_set_header Host $host;
      proxy_ssl_server_name on;
      proxy_redirect off;
      proxy_buffering off;
      proxy_cache hls_cache;
      proxy_cache_valid 200 5m;
    }

    # Azure Blob Storage
    # GCP CloudStorage

    # Everything else → goes to the frontend server
    location / {
      proxy_pass  http://host.docker.internal:5173; # host.docker.internal as the frontend is running in local machine
      proxy_redirect off;
      add_header Content-Type text/plain;
      return 200 "NGINX is working and serving the frontend.";
    }
  }
}




# proxy_pass: Forwards the request to an upstream server. If the target ends with a slash and the location pattern also ends with a slash, NGINX strips the matched prefix before appending the remainder of the URI.

# proxy_redirect: Used to rewrite Location or Refresh headers received from a proxied server before sending them to the client. In simple terms when NGINX proxies a request to a backend (like an app server or S3), the backend might respond with a Location: https://s3... redirect. If you want the client to see a different redirect URL (for example, pointing to your own domain), you use proxy_redirect.

# proxy_set_header: Used for passing information about the client (like IP address, host, etc.) to the backend server.Here,leaving it blank caused S3’s PermanentRedirect. By default NGINX forwards Host: demobucket-890291224.s3.us-east-1.amazonaws.com, which S3 requires.


# If the proxy_pass directive is specified with a URI, the part of the request URI that matched the location is replaced by the URI given in proxy_pass.
# Because proxy_pass URI is just / (nothing after the host), the prefix /s01/ is replaced by /, effectively trimming it off.

# The request .../s01/videos/1/26/master.m3u8 matches the location block hence includes "/s01/" is the “location prefix”. When the proxy_pass URL ends with “/”, NGINX replaces the matched location prefix with that “/”.<br/>Resulting upstream URI → /videos/1/26/master.m3u8.

# location ~ ^/s01/video/(.+)$ --> the pattern (.+) is capture-group, so for the request .../s01/video/1/26/master.m3u8,
#                                 $1 = 1/26/master.m3u8 (everything after /s01/video/).
